!(function () {
  "use strict"
  const e = (e, t, n) => e.addEventListener(t, n),
    t = (e, t) => e.appendChild(t),
    n = (e) => document.createElement(e),
    r = (e) => document.queryCommandState(e),
    o = (e, t = null) => document.execCommand(e, !1, t),
    i = {
      bold: {
        icon: "<b>B</b>",
        title: "Bold",
        state: () => r("bold"),
        result: () => o("bold"),
      },
      italic: {
        icon: "<i>I</i>",
        title: "Italic",
        state: () => r("italic"),
        result: () => o("italic"),
      },
      underline: {
        icon: "<u>U</u>",
        title: "Underline",
        state: () => r("underline"),
        result: () => o("underline"),
      },
      strikethrough: {
        icon: "<strike>S</strike>",
        title: "Strike-through",
        state: () => r("strikeThrough"),
        result: () => o("strikeThrough"),
      },
      heading1: {
        icon: "<b>H<sub>1</sub></b>",
        title: "Heading 1",
        result: () => o("formatBlock", "<h1>"),
      },
      heading2: {
        icon: "<b>H<sub>2</sub></b>",
        title: "Heading 2",
        result: () => o("formatBlock", "<h2>"),
      },
      paragraph: {
        icon: "&#182;",
        title: "Paragraph",
        result: () => o("formatBlock", "<p>"),
      },
      quote: {
        icon: "&#8220; &#8221;",
        title: "Quote",
        result: () => o("formatBlock", "<blockquote>"),
      },
      olist: {
        icon: "&#35;",
        title: "Ordered List",
        result: () => o("insertOrderedList"),
      },
      ulist: {
        icon: "&#8226;",
        title: "Unordered List",
        result: () => o("insertUnorderedList"),
      },
      code: {
        icon: "&lt;/&gt;",
        title: "Code",
        result: () => o("formatBlock", "<pre>"),
      },
      line: {
        icon: "&#8213;",
        title: "Horizontal Line",
        result: () => o("insertHorizontalRule"),
      },
      link: {
        icon: "&#128279;",
        title: "Link",
        result: () => {
          const e = window.prompt("Enter the link URL")
          e && o("createLink", e)
        },
      },
      image: {
        icon: "&#128247;",
        title: "Image",
        result: () => {
          const e = window.prompt("Enter the image URL")
          e && o("insertImage", e)
        },
      },
    },
    a = {
      actionbar: "pell-actionbar",
      button: "pell-button",
      content: "pell-content",
      selected: "pell-button-selected",
    },
    s = (r) => {
      const s = r.actions
          ? r.actions.map((e) =>
              "string" == typeof e
                ? i[e]
                : i[e.name]
                ? { ...i[e.name], ...e }
                : e
            )
          : Object.keys(i).map((e) => i[e]),
        c = { ...a, ...r.classes },
        l = r.defaultParagraphSeparator || "div",
        u = n("div")
      ;(u.className = c.actionbar), t(r.element, u)
      const f = (r.element.content = n("div"))
      return (
        (f.contentEditable = !0),
        (f.className = c.content),
        (f.oninput = ({ target: { firstChild: e } }) => {
          e && 3 === e.nodeType
            ? o("formatBlock", `<${l}>`)
            : "<br>" === f.innerHTML && (f.innerHTML = ""),
            r.onChange(f.innerHTML)
        }),
        (f.onkeydown = (e) => {
          var t
          "Enter" === e.key &&
            "blockquote" ===
              ((t = "formatBlock"), document.queryCommandValue(t)) &&
            setTimeout(() => o("formatBlock", `<${l}>`), 0)
        }),
        t(r.element, f),
        s.forEach((r) => {
          const o = n("button")
          if (
            ((o.className = c.button),
            (o.innerHTML = r.icon),
            (o.title = r.title),
            o.setAttribute("type", "button"),
            (o.onclick = () => r.result() && f.focus()),
            r.state)
          ) {
            const t = () =>
              o.classList[r.state() ? "add" : "remove"](c.selected)
            e(f, "keyup", t), e(f, "mouseup", t), e(o, "click", t)
          }
          t(u, o)
        }),
        r.styleWithCSS && o("styleWithCSS"),
        o("defaultParagraphSeparator", l),
        r.element
      )
    }
  /*! (c) Andrea Giammarchi - ISC */
  var c = {}
  try {
    c.WeakMap = WeakMap
  } catch (e) {
    c.WeakMap = (function (e, t) {
      var n = t.defineProperty,
        r = t.hasOwnProperty,
        o = i.prototype
      return (
        (o.delete = function (e) {
          return this.has(e) && delete e[this._]
        }),
        (o.get = function (e) {
          return this.has(e) ? e[this._] : void 0
        }),
        (o.has = function (e) {
          return r.call(e, this._)
        }),
        (o.set = function (e, t) {
          return n(e, this._, { configurable: !0, value: t }), this
        }),
        i
      )
      function i(t) {
        n(this, "_", { value: "_@ungap/weakmap" + e++ }),
          t && t.forEach(a, this)
      }
      function a(e) {
        this.set(e[0], e[1])
      }
    })(Math.random(), Object)
  }
  var l = c.WeakMap,
    u = "object" != typeof document,
    f = function (e) {
      var t,
        n =
          ((t = (document.defaultView.navigator || {}).userAgent),
          /(Firefox|Safari)\/(\d+)/.test(t) &&
            !/(Chrom[eium]+|Android)\/(\d+)/.test(t)),
        r =
          !("raw" in e) ||
          e.propertyIsEnumerable("raw") ||
          !Object.isFrozen(e.raw)
      if (n || r) {
        var o = {},
          i = function (e) {
            for (var t = ".", n = 0; n < e.length; n++)
              t += e[n].length + "." + e[n]
            return o[t] || (o[t] = e)
          }
        if (r) f = i
        else {
          var a = new l()
          f = function (e) {
            return (
              a.get(e) ||
              (function (e, t) {
                return a.set(e, t), t
              })(e, i(e))
            )
          }
        }
      } else u = !0
      return d(e)
    }
  function d(e) {
    return u ? e : f(e)
  }
  function p(e) {
    for (var t = arguments.length, n = [d(e)], r = 1; r < t; )
      n.push(arguments[r++])
    return n
  }
  /*! (c) Andrea Giammarchi - ISC */ var h = {}
  h.CustomEvent =
    "function" == typeof CustomEvent
      ? CustomEvent
      : (function (e) {
          return (t.prototype = new t("").constructor.prototype), t
          function t(e, t) {
            t || (t = {})
            var n = document.createEvent("CustomEvent")
            return (
              n.initCustomEvent(e, !!t.bubbles, !!t.cancelable, t.detail), n
            )
          }
        })()
  var g = h.CustomEvent,
    m = {}
  /*! (c) Andrea Giammarchi - ISC */ try {
    m.WeakSet = WeakSet
  } catch (e) {
    !(function (e) {
      var t = new e(),
        n = r.prototype
      function r(n) {
        t.set(this, new e()), n && n.forEach(this.add, this)
      }
      ;(n.add = function (e) {
        return t.get(this).set(e, 1), this
      }),
        (n.delete = function (e) {
          return t.get(this).delete(e)
        }),
        (n.has = function (e) {
          return t.get(this).has(e)
        }),
        (m.WeakSet = r)
    })(WeakMap)
  }
  var v = m.WeakSet
  /*! (c) Andrea Giammarchi */ var y =
      "function" == typeof cancelAnimationFrame,
    b = y ? cancelAnimationFrame : clearTimeout,
    w = y ? requestAnimationFrame : setTimeout
  function k(e) {
    var t, n, r, o, i
    return (
      s(),
      function (e, s, l) {
        return (r = e), (o = s), (i = l), n || (n = w(a)), --t < 0 && c(!0), c
      }
    )
    function a() {
      s(), r.apply(o, i || [])
    }
    function s() {
      ;(t = e || 1 / 0), (n = y ? 0 : null)
    }
    function c(e) {
      var t = !!n
      return t && (b(n), e && a()), t
    }
  }
  /*! (c) Andrea Giammarchi - ISC */ let N = null
  const E = new WeakMap(),
    C = (e) => {
      const t = k()
      return E.set(e, t), t
    },
    x = (e, t, n) => {
      e.apply(t, n)
    },
    L = { async: !1, always: !1 },
    S = new WeakMap(),
    T = () => {},
    A = (e) => {
      ;(S.get(e) || []).forEach((e) => {
        const { clean: t, stop: n } = e
        n(), t && ((e.clean = null), t())
      })
    },
    O = S.has.bind(S),
    j =
      ((M = !0),
      (e, t) => {
        const n = N.i++,
          { hook: r, after: o, stack: i, length: a } = N
        if (n < a) {
          const r = i[n],
            { update: a, values: s, stop: c } = r
          if (!t || t.some($, s)) {
            ;(r.values = t), M && c(M)
            const { clean: n } = r
            n && ((r.clean = null), n())
            const i = () => {
              r.clean = e()
            }
            M ? a(i) : o.push(i)
          }
        } else {
          const n = M ? k() : T,
            a = { clean: null, update: n, values: t, stop: T }
          ;(N.length = i.push(a)),
            (
              S.get(r) ||
              ((e) => {
                const t = []
                return S.set(e, t), t
              })(r)
            ).push(a)
          const s = () => {
            a.clean = e()
          }
          M ? (a.stop = n(s)) : o.push(s)
        }
      })
  var M
  function $(e, t) {
    return e !== this[t]
  }
  /*! (c) Andrea Giammarchi - ISC */ const B = (function (e) {
      var t = e.Event,
        n = e.WeakSet,
        r = !0,
        o = null
      return function (e) {
        return (
          r &&
            ((r = !r),
            (o = new n()),
            (function (e) {
              var r = new n(),
                i = new n()
              try {
                new MutationObserver(l).observe(e, {
                  subtree: !0,
                  childList: !0,
                })
              } catch (t) {
                var a = 0,
                  s = [],
                  c = function (e) {
                    s.push(e),
                      clearTimeout(a),
                      (a = setTimeout(function () {
                        l(s.splice((a = 0), s.length))
                      }, 0))
                  }
                e.addEventListener(
                  "DOMNodeRemoved",
                  function (e) {
                    c({ addedNodes: [], removedNodes: [e.target] })
                  },
                  !0
                ),
                  e.addEventListener(
                    "DOMNodeInserted",
                    function (e) {
                      c({ addedNodes: [e.target], removedNodes: [] })
                    },
                    !0
                  )
              }
              function l(e) {
                for (var t, n = e.length, o = 0; o < n; o++)
                  u((t = e[o]).removedNodes, "disconnected", i, r),
                    u(t.addedNodes, "connected", r, i)
              }
              function u(e, n, r, o) {
                for (
                  var i, a = new t(n), s = e.length, c = 0;
                  c < s;
                  1 === (i = e[c++]).nodeType && f(i, a, n, r, o)
                );
              }
              function f(e, t, n, r, i) {
                o.has(e) &&
                  !r.has(e) &&
                  (i.delete(e), r.add(e), e.dispatchEvent(t))
                for (
                  var a = e.children || [], s = a.length, c = 0;
                  c < s;
                  f(a[c++], t, n, r, i)
                );
              }
            })(e.ownerDocument)),
          o.add(e),
          e
        )
      }
    })({ Event: g, WeakSet: v }),
    I = (e, t) => {
      const { nodeType: n } = e
      if (n) {
        const r =
          1 === n
            ? e
            : ((e) => {
                const { childNodes: t } = e,
                  { length: n } = t
                let r = 0
                for (; r < n; ) {
                  const e = t[r++]
                  if (1 === e.nodeType) return e
                }
                throw "unobservable"
              })(e)
        B(r), r.addEventListener("disconnected", t, !1)
      } else {
        const n = e.valueOf()
        n !== e && I(n, t)
      }
    },
    D = (e) => {
      let t = null
      const n = ((e) => {
        const t = []
        return function n() {
          const r = N,
            o = []
          N = {
            hook: n,
            args: arguments,
            stack: t,
            i: 0,
            length: t.length,
            after: o,
          }
          try {
            return e.apply(null, arguments)
          } finally {
            N = r
            for (let e = 0, { length: t } = o; e < t; e++) o[e]()
          }
        }
      })(e)
      return function () {
        const e = n.apply(this, arguments)
        return O(n) && I(e, t || (t = A.bind(null, n))), e
      }
    }
  /*! (c) Andrea Giammarchi - ISC */
  var H,
    R = "-" + Math.random().toFixed(6) + "%",
    _ = !1
  try {
    ;("content" in (H = document.createElement("template")) &&
      ((H.innerHTML = '<p tabindex="' + R + '"></p>'),
      H.content.childNodes[0].getAttribute("tabindex") == R)) ||
      ((R = "_dt: " + R.slice(1, -1) + ";"), (_ = !0))
  } catch (e) {}
  var U = "\x3c!--" + R + "--\x3e",
    W = /^(?:style|textarea)$/i,
    F = /^(?:area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)$/i
  /*! (c) Andrea Giammarchi - ISC */
  function P(e) {
    return e.join(U).replace(Q, ee).replace(G, X)
  }
  var q = " \\f\\n\\r\\t",
    z = "[^" + q + "\\/>\"'=]+",
    J = "[" + q + "]+" + z,
    V = "<([A-Za-z]+[A-Za-z0-9:._-]*)((?:",
    Z =
      "(?:\\s*=\\s*(?:'[^']*?'|\"[^\"]*?\"|<[^>]*?>|" +
      z.replace("\\/", "") +
      "))?)",
    G = new RegExp(V + J + Z + "+)([" + q + "]*/?>)", "g"),
    Q = new RegExp(V + J + Z + "*)([" + q + "]*/>)", "g"),
    K = new RegExp("(" + J + "\\s*=\\s*)(['\"]?)" + U + "\\2", "gi")
  function X(e, t, n, r) {
    return "<" + t + n.replace(K, Y) + r
  }
  function Y(e, t, n) {
    return t + (n || '"') + R + (n || '"')
  }
  function ee(e, t, n) {
    return F.test(t) ? e : "<" + t + n + "></" + t + ">"
  }
  /*! (c) Andrea Giammarchi - ISC */ var te = (function (e) {
    var t =
      "content" in r("template")
        ? function (e) {
            var t = r("template")
            return (t.innerHTML = e), t.content
          }
        : function (e) {
            var t = r("fragment"),
              o = r("template"),
              i = null
            if (/^[^\S]*?<(col(?:group)?|t(?:head|body|foot|r|d|h))/i.test(e)) {
              var a = RegExp.$1
              ;(o.innerHTML = "<table>" + e + "</table>"),
                (i = o.querySelectorAll(a))
            } else (o.innerHTML = e), (i = o.childNodes)
            return n(t, i), t
          }
    return function (e, n) {
      return ("svg" === n ? o : t)(e)
    }
    function n(e, t) {
      for (var n = t.length; n--; ) e.appendChild(t[0])
    }
    function r(t) {
      return "fragment" === t
        ? e.createDocumentFragment()
        : e.createElementNS("http://www.w3.org/1999/xhtml", t)
    }
    function o(e) {
      var t = r("fragment"),
        o = r("div")
      return (
        (o.innerHTML =
          '<svg xmlns="http://www.w3.org/2000/svg">' + e + "</svg>"),
        n(t, o.firstChild.childNodes),
        t
      )
    }
  })(document)
  const { indexOf: ne } = [],
    re = (e, t, n, r, o, i) => {
      const a = "selectedIndex" in t
      let s = a
      for (; r < o; ) {
        const o = e(n[r], 1)
        if ((t.insertBefore(o, i), a && s && o.selected)) {
          s = !s
          let { selectedIndex: e } = t
          t.selectedIndex = e < 0 ? r : ne.call(t.querySelectorAll("option"), o)
        }
        r++
      }
    },
    oe = (e, t) => e == t,
    ie = (e) => e,
    ae = (e, t, n, r, o, i, a) => {
      const s = i - o
      if (s < 1) return -1
      for (; n - t >= s; ) {
        let s = t,
          c = o
        for (; s < n && c < i && a(e[s], r[c]); ) s++, c++
        if (c === i) return t
        t = s + 1
      }
      return -1
    },
    se = (e, t, n, r, o) =>
      n < r ? e(t[n], 0) : 0 < n ? e(t[n - 1], -0).nextSibling : o,
    ce = (e, t, n, r) => {
      for (; n < r; ) fe(e(t[n++], -1))
    },
    le = (e, t, n) => {
      let r = 1,
        o = t
      for (; r < o; ) {
        const t = ((r + o) / 2) >>> 0
        n < e[t] ? (o = t) : (r = t + 1)
      }
      return r
    },
    ue = (e, t, n, r, o, i, a, s, c, l, u, f, d) => {
      ;((e, t, n, r, o, i, a, s, c) => {
        const l = [],
          u = e.length
        let f = a,
          d = 0
        for (; d < u; )
          switch (e[d++]) {
            case 0:
              o++, f++
              break
            case 1:
              l.push(r[o]), re(t, n, r, o++, o, f < s ? t(i[f], 0) : c)
              break
            case -1:
              f++
          }
        for (d = 0; d < u; )
          switch (e[d++]) {
            case 0:
              a++
              break
            case -1:
              ;-1 < l.indexOf(i[a]) ? a++ : ce(t, i, a++, a)
          }
      })(
        ((e, t, n, r, o, i, a) => {
          const s = n + i,
            c = []
          let l, u, f, d, p, h, g
          e: for (l = 0; l <= s; l++) {
            if (l > 50) return null
            for (
              g = l - 1, p = l ? c[l - 1] : [0, 0], h = c[l] = [], u = -l;
              u <= l;
              u += 2
            ) {
              for (
                d =
                  u === -l || (u !== l && p[g + u - 1] < p[g + u + 1])
                    ? p[g + u + 1]
                    : p[g + u - 1] + 1,
                  f = d - u;
                d < i && f < n && a(r[o + d], e[t + f]);

              )
                d++, f++
              if (d === i && f === n) break e
              h[l + u] = d
            }
          }
          const m = Array(l / 2 + s / 2)
          let v = m.length - 1
          for (l = c.length - 1; l >= 0; l--) {
            for (; d > 0 && f > 0 && a(r[o + d - 1], e[t + f - 1]); )
              (m[v--] = 0), d--, f--
            if (!l) break
            ;(g = l - 1),
              (p = l ? c[l - 1] : [0, 0]),
              (u = d - f),
              u === -l || (u !== l && p[g + u - 1] < p[g + u + 1])
                ? (f--, (m[v--] = 1))
                : (d--, (m[v--] = -1))
          }
          return m
        })(n, r, i, a, s, l, f) ||
          ((e, t, n, r, o, i, a, s) => {
            let c = 0,
              l = r < s ? r : s
            const u = Array(l++),
              f = Array(l)
            f[0] = -1
            for (let e = 1; e < l; e++) f[e] = a
            const d = o.slice(i, a)
            for (let r = t; r < n; r++) {
              const t = d.indexOf(e[r])
              if (-1 < t) {
                const e = t + i
                ;(c = le(f, l, e)),
                  -1 < c &&
                    ((f[c] = e), (u[c] = { newi: r, oldi: e, prev: u[c - 1] }))
              }
            }
            for (c = --l, --a; f[c] > a; ) --c
            l = s + r - c
            const p = Array(l)
            let h = u[c]
            for (--n; h; ) {
              const { newi: e, oldi: t } = h
              for (; n > e; ) (p[--l] = 1), --n
              for (; a > t; ) (p[--l] = -1), --a
              ;(p[--l] = 0), --n, --a, (h = h.prev)
            }
            for (; n >= t; ) (p[--l] = 1), --n
            for (; a >= i; ) (p[--l] = -1), --a
            return p
          })(n, r, o, i, a, s, c, l),
        e,
        t,
        n,
        r,
        a,
        s,
        u,
        d
      )
    },
    fe = (e) => (e.remove || de).call(e)
  function de() {
    const { parentNode: e } = this
    e && e.removeChild(this)
  }
  /*! (c) 2018 Andrea Giammarchi (ISC) */ const pe = (e, t, n, r) => {
    r || (r = {})
    const o = r.compare || oe,
      i = r.node || ie,
      a = null == r.before ? null : i(r.before, 0),
      s = t.length
    let c = s,
      l = 0,
      u = n.length,
      f = 0
    for (; l < c && f < u && o(t[l], n[f]); ) l++, f++
    for (; l < c && f < u && o(t[c - 1], n[u - 1]); ) c--, u--
    const d = l === c,
      p = f === u
    if (d && p) return n
    if (d && f < u) return re(i, e, n, f, u, se(i, t, l, s, a)), n
    if (p && l < c) return ce(i, t, l, c), n
    const h = c - l,
      g = u - f
    let m = -1
    if (h < g) {
      if (((m = ae(n, f, u, t, l, c, o)), -1 < m))
        return (
          re(i, e, n, f, m, i(t[l], 0)),
          re(i, e, n, m + h, u, se(i, t, c, s, a)),
          n
        )
    } else if (g < h && ((m = ae(t, l, c, n, f, u, o)), -1 < m))
      return ce(i, t, l, m), ce(i, t, m + g, c), n
    return h < 2 || g < 2
      ? (re(i, e, n, f, u, i(t[l], 0)), ce(i, t, l, c), n)
      : h === g &&
        ((e, t, n, r, o, i) => {
          for (; r < o && i(n[r], e[t - 1]); ) r++, t--
          return 0 === t
        })(n, u, t, l, c, o)
      ? (re(i, e, n, f, u, se(i, t, c, s, a)), n)
      : (ue(i, e, n, f, u, g, t, l, c, h, s, o, a), n)
  }
  /*! (c) Andrea Giammarchi - ISC */ var he = (function (e, t, n, r, o) {
      var i = "importNode" in e,
        a = e.createDocumentFragment()
      return (
        a.appendChild(e.createTextNode("g")),
        a.appendChild(e.createTextNode("")),
        (i ? e.importNode(a, !0) : a.cloneNode(!0)).childNodes.length < 2
          ? function e(t, n) {
              for (
                var r = t.cloneNode(),
                  o = t.childNodes || [],
                  i = o.length,
                  a = 0;
                n && a < i;
                a++
              )
                r.appendChild(e(o[a], n))
              return r
            }
          : i
          ? e.importNode
          : function (e, t) {
              return e.cloneNode(!!t)
            }
      )
    })(document),
    ge =
      "".trim ||
      function () {
        return String(this).replace(/^\s+|\s+/g, "")
      },
    me = _
      ? function (e, t) {
          var n = t.join(" ")
          return t.slice.call(e, 0).sort(function (e, t) {
            return n.indexOf(e.name) <= n.indexOf(t.name) ? -1 : 1
          })
        }
      : function (e, t) {
          return t.slice.call(e, 0)
        }
  function ve(e, t) {
    for (var n = t.length, r = 0; r < n; ) e = e.childNodes[t[r++]]
    return e
  }
  function ye(e, t, n, r) {
    for (
      var o = e.attributes, i = [], a = [], s = me(o, n), c = s.length, l = 0;
      l < c;

    ) {
      var u,
        f = s[l++],
        d = f.value === R
      if (d || 1 < (u = f.value.split(U)).length) {
        var p = f.name
        if (i.indexOf(p) < 0) {
          i.push(p)
          var h = n
              .shift()
              .replace(
                d
                  ? /^(?:|[\S\s]*?\s)(\S+?)\s*=\s*('|")?$/
                  : new RegExp(
                      "^(?:|[\\S\\s]*?\\s)(" + p + ")\\s*=\\s*('|\")[\\S\\s]*",
                      "i"
                    ),
                "$1"
              ),
            g = o[h] || o[h.toLowerCase()]
          if (d) t.push(we(g, r, h, null))
          else {
            for (var m = u.length - 2; m--; ) n.shift()
            t.push(we(g, r, h, u))
          }
        }
        a.push(f)
      }
    }
    l = 0
    for (
      var v = 0 < (c = a.length) && _ && !("ownerSVGElement" in e);
      l < c;

    ) {
      var y = a[l++]
      v && (y.value = ""), e.removeAttribute(y.name)
    }
    var b = e.nodeName
    if (/^script$/i.test(b)) {
      var w = document.createElement(b)
      for (c = o.length, l = 0; l < c; )
        w.setAttributeNode(o[l++].cloneNode(!0))
      ;(w.textContent = e.textContent), e.parentNode.replaceChild(w, e)
    }
  }
  function be(e, t) {
    return { type: "any", node: e, path: t }
  }
  function we(e, t, n, r) {
    return { type: "attr", node: e, path: t, name: n, sparse: r }
  }
  function ke(e, t) {
    return { type: "text", node: e, path: t }
  }
  var Ne = new l()
  function Ee(e, t) {
    var n = (e.convert || P)(t),
      r = e.transform
    r && (n = r(n))
    var o = te(n, e.type)
    Le(o)
    var i = []
    !(function e(t, n, r, o) {
      for (var i = t.childNodes, a = i.length, s = 0; s < a; ) {
        var c = i[s]
        switch (c.nodeType) {
          case 1:
            var l = o.concat(s)
            ye(c, n, r, l), e(c, n, r, l)
            break
          case 8:
            var u = c.textContent
            if (u === R)
              r.shift(),
                n.push(W.test(t.nodeName) ? ke(t, o) : be(c, o.concat(s)))
            else
              switch (u.slice(0, 2)) {
                case "/*":
                  if ("*/" !== u.slice(-2)) break
                case "👻":
                  t.removeChild(c), s--, a--
              }
            break
          case 3:
            W.test(t.nodeName) &&
              ge.call(c.textContent) === U &&
              (r.shift(), n.push(ke(t, o)))
        }
        s++
      }
    })(o, i, t.slice(0), [])
    var a = {
      content: o,
      updates: function (n) {
        for (var r = [], o = i.length, a = 0, s = 0; a < o; ) {
          var c = i[a++],
            l = ve(n, c.path)
          switch (c.type) {
            case "any":
              r.push({ fn: e.any(l, []), sparse: !1 })
              break
            case "attr":
              var u = c.sparse,
                f = e.attribute(l, c.name, c.node)
              null === u
                ? r.push({ fn: f, sparse: !1 })
                : ((s += u.length - 2),
                  r.push({ fn: f, sparse: !0, values: u }))
              break
            case "text":
              r.push({ fn: e.text(l), sparse: !1 }), (l.textContent = "")
          }
        }
        return (
          (o += s),
          function () {
            var e = arguments.length
            if (o !== e - 1)
              throw new Error(
                e - 1 + " values instead of " + o + "\n" + t.join("${value}")
              )
            for (var i = 1, a = 1; i < e; ) {
              var s = r[i - a]
              if (s.sparse) {
                var c = s.values,
                  l = c[0],
                  u = 1,
                  f = c.length
                for (a += f - 2; u < f; ) l += arguments[i++] + c[u++]
                s.fn(l)
              } else s.fn(arguments[i++])
            }
            return n
          }
        )
      },
    }
    return Ne.set(t, a), a
  }
  function Ce(e, t) {
    var n = Ne.get(t) || Ee(e, t)
    return n.updates(he.call(document, n.content, !0))
  }
  var xe = []
  function Le(e) {
    for (var t = e.childNodes, n = t.length; n--; ) {
      var r = t[n]
      1 !== r.nodeType &&
        0 === ge.call(r.textContent).length &&
        e.removeChild(r)
    }
  }
  /*! (c) Andrea Giammarchi - ISC */ var Se = (function () {
      var e = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i,
        t = /([^A-Z])([A-Z]+)/g
      return function (e, t) {
        return "ownerSVGElement" in e
          ? (function (e, t) {
              var n
              t
                ? (n = t.cloneNode(!0))
                : (e.setAttribute("style", "--hyper:style;"),
                  (n = e.getAttributeNode("style")))
              return (n.value = ""), e.setAttributeNode(n), r(n, !0)
            })(e, t)
          : r(e.style, !1)
      }
      function n(e, t, n) {
        return t + "-" + n.toLowerCase()
      }
      function r(r, o) {
        var i, a
        return function (s) {
          var c, l, u, f
          switch (typeof s) {
            case "object":
              if (s) {
                if ("object" === i) {
                  if (!o && a !== s) for (l in a) l in s || (r[l] = "")
                } else o ? (r.value = "") : (r.cssText = "")
                for (l in ((c = o ? {} : r), s))
                  (u =
                    "number" != typeof (f = s[l]) || e.test(l) ? f : f + "px"),
                    !o && /^--/.test(l) ? c.setProperty(l, u) : (c[l] = u)
                ;(i = "object"),
                  o
                    ? (r.value = (function (e) {
                        var r,
                          o = []
                        for (r in e) o.push(r.replace(t, n), ":", e[r], ";")
                        return o.join("")
                      })((a = c)))
                    : (a = s)
                break
              }
            default:
              a != s &&
                ((i = "string"),
                (a = s),
                o ? (r.value = s || "") : (r.cssText = s || ""))
          }
        }
      }
    })(),
    Te = (function (e, t) {
      return (
        ((t = n.prototype).ELEMENT_NODE = 1),
        (t.nodeType = 111),
        (t.remove = function (e) {
          var t = this.childNodes,
            n = this.firstChild,
            r = this.lastChild
          if (((this._ = null), e && 2 === t.length))
            r.parentNode.removeChild(r)
          else {
            var o = this.ownerDocument.createRange()
            o.setStartBefore(e ? t[1] : n), o.setEndAfter(r), o.deleteContents()
          }
          return n
        }),
        (t.valueOf = function (e) {
          var t = this._,
            n = null == t
          if (
            (n && (t = this._ = this.ownerDocument.createDocumentFragment()),
            n || e)
          )
            for (var r = this.childNodes, o = 0, i = r.length; o < i; o++)
              t.appendChild(r[o])
          return t
        }),
        n
      )
      function n(t) {
        var n = (this.childNodes = e.call(t, 0))
        ;(this.firstChild = n[0]),
          (this.lastChild = n[n.length - 1]),
          (this.ownerDocument = n[0].ownerDocument),
          (this._ = null)
      }
    })([].slice)
  /*! (c) Andrea Giammarchi - ISC */ const { isArray: Ae } = Array,
    { create: Oe, freeze: je, keys: Me } = Object,
    $e = Te.prototype.nodeType,
    Be = (e, t) =>
      e.nodeType === $e
        ? 1 / t < 0
          ? t
            ? e.remove(!0)
            : e.lastChild
          : t
          ? e.valueOf(!0)
          : e.firstChild
        : e,
    Ie = (e, t) => {
      let n,
        r = !1
      const o = t.cloneNode(!0)
      return (t) => {
        n !== t &&
          ((n = t),
          o.value !== t &&
            (null == t
              ? (r && ((r = !1), e.removeAttributeNode(o)), (o.value = t))
              : ((o.value = t), r || ((r = !0), e.setAttributeNode(o)))))
      }
    },
    De = (e, t) => {
      let n
      return (r) => {
        n !== r &&
          ((n = r),
          e[t] !== r &&
            (null == r ? ((e[t] = ""), e.removeAttribute(t)) : (e[t] = r)))
      }
    },
    He = /^(?:form|list)$/i,
    Re = [].slice,
    _e = (e, t) => e.ownerDocument.createTextNode(t)
  function Ue(e) {
    return (
      (this.type = e),
      (function (e) {
        var t = xe,
          n = Le
        return function (r) {
          return t !== r && (n = Ce(e, (t = r))), n.apply(null, arguments)
        }
      })(this)
    )
  }
  function We(e) {
    return e(this)
  }
  Ue.prototype = {
    attribute(e, t, n) {
      const r = "svg" === this.type
      switch (t) {
        case "class":
          if (r) return Ie(e, n)
          t = "className"
        case "data":
        case "props":
          return De(e, t)
        case "style":
          return Se(e, n, r)
        case "ref":
          return ((e) => (t) => {
            t.current = e
          })(e)
        default:
          return "." === t.slice(0, 1)
            ? ((e, t, n) =>
                n
                  ? (n) => {
                      try {
                        e[t] = n
                      } catch (r) {
                        e.setAttribute(t, n)
                      }
                    }
                  : (n) => {
                      e[t] = n
                    })(e, t.slice(1), r)
            : "on" === t.slice(0, 2)
            ? ((e, t) => {
                let n,
                  r = t.slice(2)
                return (
                  t.toLowerCase() in e && (r = r.toLowerCase()),
                  (t) => {
                    n !== t &&
                      (n && e.removeEventListener(r, n, !1),
                      (n = t),
                      t && e.addEventListener(r, t, !1))
                  }
                )
              })(e, t)
            : t in e && !r && !He.test(t)
            ? De(e, t)
            : Ie(e, n)
      }
    },
    any(e, t) {
      const n = { node: Be, before: e },
        { type: r } = this
      let o,
        i = !1
      const a = (s) => {
        switch (typeof s) {
          case "string":
          case "number":
          case "boolean":
            i
              ? o !== s && ((o = s), (t[0].textContent = s))
              : ((i = !0), (o = s), (t = pe(e.parentNode, t, [_e(e, s)], n)))
            break
          case "function":
            a(s(e))
            break
          case "object":
          case "undefined":
            if (null == s) {
              ;(i = !1), (t = pe(e.parentNode, t, [], n))
              break
            }
          default:
            if (((i = !1), (o = s), Ae(s)))
              if (0 === s.length) t.length && (t = pe(e.parentNode, t, [], n))
              else
                switch (typeof s[0]) {
                  case "string":
                  case "number":
                  case "boolean":
                    a(String(s))
                    break
                  case "function":
                    a(s.map(We, e))
                    break
                  case "object":
                    Ae(s[0]) && (s = s.concat.apply([], s))
                  default:
                    t = pe(e.parentNode, t, s, n)
                }
            else
              ((e) => "ELEMENT_NODE" in e)(s)
                ? (t = pe(
                    e.parentNode,
                    t,
                    11 === s.nodeType ? Re.call(s.childNodes) : [s],
                    n
                  ))
                : "text" in s
                ? a(String(s.text))
                : "any" in s
                ? a(s.any)
                : "html" in s
                ? (t = pe(
                    e.parentNode,
                    t,
                    Re.call(te([].concat(s.html).join(""), r).childNodes),
                    n
                  ))
                : "length" in s && a(Re.call(s))
        }
      }
      return a
    },
    text(e) {
      let t
      const n = (r) => {
        if (t !== r) {
          t = r
          const o = typeof r
          "object" === o && r
            ? "text" in r
              ? n(String(r.text))
              : "any" in r
              ? n(r.any)
              : "html" in r
              ? n([].concat(r.html).join(""))
              : "length" in r && n(Re.call(r).join(""))
            : "function" === o
            ? n(r(e))
            : (e.textContent = null == r ? "" : r)
        }
      }
      return n
    },
  }
  const Fe = new l(),
    Pe = (e, t) => {
      const n = new l()
      return (
        (r.for = (e, o) => {
          const i =
            n.get(e) ||
            ((e) => {
              const t = Oe(null)
              return n.set(e, t), t
            })(e)
          return (
            i[o] ||
            (i[o] =
              ((a = { sub: [], stack: [], wire: null }),
              function () {
                return qe(t, a, r.apply(null, arguments))
              }))
          )
          var a
        }),
        (r.node = function () {
          return qe(
            t,
            { sub: [], stack: [], wire: null },
            r.apply(null, arguments)
          ).valueOf(!0)
        }),
        r
      )
      function r() {
        return new Ge(e, p.apply(null, arguments))
      }
    },
    qe = (e, t, n) => {
      const { sub: r, stack: o } = t,
        i = { a: 0, aLength: r.length, i: 0, iLength: o.length },
        a = Je(e, t, n, i),
        { a: s, i: c, aLength: l, iLength: u } = i
      return s < l && r.splice(s), c < u && o.splice(c), a
    },
    ze = (e) => {
      const t = { sub: [], stack: [], wire: null }
      return Fe.set(e, t), t
    },
    Je = (e, t, n, r) => {
      const { stack: o } = t,
        { i: i, iLength: a } = r,
        { type: s, args: c } = n,
        l = i === a
      l && (r.iLength = o.push({ type: s, id: c[0], tag: null, wire: null })),
        r.i++,
        Ve(e, t, c, r)
      const u = o[i]
      return (
        l || u.id !== c[0] || u.type !== s
          ? ((u.type = s),
            (u.id = c[0]),
            (u.tag = new e(s)),
            (u.wire = Ze(u.tag.apply(null, c))))
          : u.tag.apply(null, c),
        u.wire
      )
    },
    Ve = (e, t, n, r) => {
      for (let o = 1, { length: i } = n; o < i; o++) {
        const i = n[o]
        if ("object" == typeof i && i)
          if (i instanceof Ge) n[o] = Je(e, t, i, r)
          else if (Ae(i))
            for (let n = 0, { length: o } = i; n < o; n++) {
              const o = i[n]
              if ("object" == typeof o && o && o instanceof Ge) {
                const { sub: a } = t,
                  { a: s, aLength: c } = r
                s === c &&
                  (r.aLength = a.push({ sub: [], stack: [], wire: null })),
                  r.a++,
                  (i[n] = qe(e, a[s], o))
              }
            }
      }
    },
    Ze = (e) => {
      const t = e.childNodes,
        { length: n } = t
      return 1 === n ? t[0] : n ? new Te(t) : e
    }
  function Ge(e, t) {
    ;(this.type = e), (this.args = t)
  }
  je(Ge)
  const Qe = Ge,
    { render: Ke, html: Xe, svg: Ye } = ((e) => ({
      html: Pe("html", e),
      svg: Pe("svg", e),
      render(t, n) {
        const r = "function" == typeof n ? n() : n,
          o = Fe.get(t) || ze(t),
          i = r instanceof Ge ? qe(e, o, r) : r
        return (
          i !== o.wire &&
            ((o.wire = i), (t.textContent = ""), t.appendChild(i.valueOf(!0))),
          t
        )
      },
    }))(Ue),
    { create: et } = Object,
    { isArray: tt } = Array
  function nt() {
    return new Qe("html", p.apply(null, arguments))
  }
  ;(nt.for = gt(Xe)), gt(Ye)
  const rt = new l(),
    ot = new l(),
    it = (e, t, n) => (e.set(t, n), n),
    at = (e, t) => {
      const n = "function" == typeof t ? t() : t
      if (n instanceof ht) {
        const t = rt.get(e) || it(rt, e, { stack: [] })
        return Ke(e, ut(t, n))
      }
      {
        const t = ot.get(e) || it(ot, e, lt()),
          r = ct(t)
        return dt(t, n.args, r), st(t, r), Ke(e, n)
      }
    },
    st = ({ sub: e, stack: t }, { a: n, i: r, aLength: o, iLength: i }) => {
      n < o && e.splice(n), r < i && t.splice(r)
    },
    ct = ({ sub: e, stack: t }) => ({
      a: 0,
      aLength: e.length,
      i: 0,
      iLength: t.length,
    }),
    lt = () => ({ sub: [], stack: [] }),
    ut = (e, t) => ft(e, t, { i: 0, iLength: e.stack.length }),
    ft = ({ stack: e }, { fn: t, args: n }, r) => {
      const o = r.i++,
        i = o === r.iLength
      i && (r.iLength = e.push({ fn: t, hook: null }))
      const a = e[o]
      return (
        (i || a.fn !== t) &&
          ((a.fn = t),
          (a.hook = ((e, t) =>
            D(function () {
              const n = t.fn.apply(null, arguments)
              if (n instanceof Qe) {
                const r = ct(e)
                return dt(e, n.args, r), st(e, r), pt(t, n)
              }
              return n
            }))(lt(), a))),
        a.hook.apply(null, n)
      )
    },
    dt = (e, t, n) => {
      for (let r = 1, { length: o } = t; r < o; r++) {
        const o = t[r]
        if ("object" == typeof o && o)
          if (o instanceof ht) t[r] = ft(e, o, n)
          else if (o instanceof Qe) dt(e, o.args, n)
          else if (tt(o))
            for (let t = 0, { length: r } = o; t < r; t++) {
              const r = o[t]
              if ("object" == typeof r && r)
                if (r instanceof ht) {
                  const { sub: i } = e,
                    a = n.a++
                  a === n.aLength && (n.aLength = i.push(lt())),
                    (o[t] = ut(i[a], r))
                } else r instanceof Qe && dt(e, r.args, n)
            }
      }
    },
    pt = (e, { type: t, args: n }) =>
      ("svg" === t ? Ye : Xe).for(e, t).apply(null, n)
  function ht(e, t) {
    ;(this.fn = e), (this.args = t)
  }
  function gt(e) {
    const t = new l()
    return (n, r) => {
      const o =
          t.get(n) ||
          ((e) => {
            const n = et(null)
            return t.set(e, n), n
          })(n),
        i = o[r] || (o[r] = lt())
      return (...t) => {
        const o = ct(i)
        return dt(i, t, o), st(i, o), e.for(n, r).apply(null, t)
      }
    }
  }
  var mt = (function (e, t) {
    return e((t = { exports: {} }), t.exports), t.exports
  })(function (e, t) {
    var n
    ;(n = function () {
      function e() {
        for (var e = 0, t = {}; e < arguments.length; e++) {
          var n = arguments[e]
          for (var r in n) t[r] = n[r]
        }
        return t
      }
      function t(e) {
        return e.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent)
      }
      return (function n(r) {
        function o() {}
        function i(t, n, i) {
          if ("undefined" != typeof document) {
            "number" == typeof (i = e({ path: "/" }, o.defaults, i)).expires &&
              (i.expires = new Date(1 * new Date() + 864e5 * i.expires)),
              (i.expires = i.expires ? i.expires.toUTCString() : "")
            try {
              var a = JSON.stringify(n)
              ;/^[\{\[]/.test(a) && (n = a)
            } catch (e) {}
            ;(n = r.write
              ? r.write(n, t)
              : encodeURIComponent(String(n)).replace(
                  /%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g,
                  decodeURIComponent
                )),
              (t = encodeURIComponent(String(t))
                .replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)
                .replace(/[\(\)]/g, escape))
            var s = ""
            for (var c in i)
              i[c] &&
                ((s += "; " + c),
                !0 !== i[c] && (s += "=" + i[c].split(";")[0]))
            return (document.cookie = t + "=" + n + s)
          }
        }
        function a(e, n) {
          if ("undefined" != typeof document) {
            for (
              var o = {},
                i = document.cookie ? document.cookie.split("; ") : [],
                a = 0;
              a < i.length;
              a++
            ) {
              var s = i[a].split("="),
                c = s.slice(1).join("=")
              n || '"' !== c.charAt(0) || (c = c.slice(1, -1))
              try {
                var l = t(s[0])
                if (((c = (r.read || r)(c, l) || t(c)), n))
                  try {
                    c = JSON.parse(c)
                  } catch (e) {}
                if (((o[l] = c), e === l)) break
              } catch (e) {}
            }
            return e ? o[e] : o
          }
        }
        return (
          (o.set = i),
          (o.get = function (e) {
            return a(e, !1)
          }),
          (o.getJSON = function (e) {
            return a(e, !0)
          }),
          (o.remove = function (t, n) {
            i(t, "", e(n, { expires: -1 }))
          }),
          (o.defaults = {}),
          (o.withConverter = n),
          o
        )
      })(function () {})
    }),
      (e.exports = n())
  })
  mt.Cookies
  const vt =
    ((yt = (e) => {
      let t
      const [n, r] = ((e, t) => {
        const n = N.i++,
          { hook: r, args: o, stack: i, length: a } = N,
          { async: s, always: c } = t || L
        n === a &&
          (N.length = i.push({
            $: "function" == typeof e ? e() : e,
            _: s ? E.get(r) || C(r) : x,
          }))
        const l = i[n]
        return [
          l.$,
          (e) => {
            const t = "function" == typeof e ? e(l.$) : e
            ;(c || l.$ !== t) && ((l.$ = t), l._(r, null, o))
          },
        ]
      })()
      return (
        j(() => {
          if (
            ((document.getElementById("cnt").style = n
              ? "display: none"
              : "display: block"),
            !n)
          ) {
            const e = document.querySelector(".pell")
            return void (e && e.parentNode.removeChild(e))
          }
          const e = document.getElementById("cnt").parentNode
          if (e.querySelector(".pell")) return
          const r = document.createElement("div")
          ;(r.className = "pell"),
            e.appendChild(r),
            (t = s({
              element: r,
              onChange: () => !1,
              defaultParagraphSeparator: "p",
              actions: [
                "ulist",
                "bold",
                "italic",
                {
                  name: "image",
                  result: () => {
                    const e = window.prompt("Enter the image URL")
                    e && o("insertImage", e)
                  },
                },
                {
                  name: "link",
                  result: () => {
                    const e = window.prompt("Enter the link URL")
                    e && o("createLink", e)
                  },
                },
              ],
              classes: { content: "pell-content content" },
            })),
            (t.content.innerHTML = document.getElementById("cnt").innerHTML)
        }, [n]),
        nt`
    <div
      id="app-actions"
      class="tabs is-toggle is-toggle-rounded is-right is-large"
    >
      <ul>
        <li class=${n ? "" : "is-active"}>
          <a onclick=${(e) => {
            e.preventDefault(), n && r(!1)
          }} href="#">${n ? "Cancel" : "View"}</a>
        </li>
        <li><a href="#">Export</a></li>
        <li class=${n ? "is-active" : ""}>
          <a href="#" onclick=${(e) => {
            if ((e.preventDefault(), !n)) return r(!0)
            const o = window.location.pathname,
              i = t.content.innerHTML
            ;(document.getElementById("cnt").innerHTML = i),
              fetch(o, {
                credentials: "include",
                headers: { "content-type": "application/json" },
                method: "post",
                body: JSON.stringify({ cnt: i }),
              })
                .then((e) => Promise.all([e.json(), e.ok]))
                .then(([e, t]) => {
                  console.log("JSON-SAVE-RESPONSE", t, e), r(!t)
                })
                .catch(console.error)
          }}
            >${n ? "Save" : "Edit"}&nbsp;<small class="rym-bg"
              >as 👤 ${e}</small
            ></a
          >
        </li>
      </ul>
    </div>
  `
      )
    }),
    (...e) => new ht(yt, e))
  var yt
  const bt = () => {
    const e = (() => {
        const e = mt.get("connected")
        if (!e) return
        const [t] = e.split(".")
        return t
      })(),
      t = nt`
    <div class="button is-static">👤 ${e}</div>
    <button onclick=${() => {
      mt.remove("connected"), bt()
    }} class="button is-warning">
      Logout
    </button>
  `,
      n = nt`
    <button class="button is-info">
      Sign up
    </button>
    <button class="button is-success" onclick=${() => {
      const e = window.prompt("Username"),
        t = window.prompt("Password")
      e &&
        t &&
        fetch("/api/login", {
          credentials: "include",
          headers: { "content-type": "application/json" },
          method: "post",
          body: JSON.stringify({ name: e, password: t }),
        })
          .then((e) => Promise.all([e.json(), e.ok]))
          .then(([e, t]) => {
            t && bt()
          })
          .catch(console.error)
    }}>
      Log in
    </button>
  `
    e
      ? (at(document.getElementById("is-connected"), t),
        ((e) => {
          const t = vt(e),
            n = document.getElementById("cnt"),
            r = n.parentNode.insertBefore(document.createElement("div"), n)
          at(r, t)
        })(e))
      : (at(document.getElementById("is-connected"), n),
        (() => {
          const e = document.getElementById("app-actions")
          e && e.parentNode.removeChild(e)
        })())
  }
  bt()
})()
